import matplotlib.pyplot as plt

a = [(10, 50, 0.17440056800842285), (15, 75, 0.3289189338684082), (20, 100, 0.45286989212036133), (25, 125, 0.5780143737792969), (30, 150, 0.6590840816497803), (35, 175, 0.7789804935455322), (40, 200, 0.7517096996307373), (45, 225, 1.258742332458496), (50, 250, 1.31669020652771), (55, 275, 1.4614694118499756), (60, 300, 1.7262308597564697), (65, 325, 1.8870158195495605), (70, 350, 1.5773353576660156), (75, 375, 2.156975746154785), (80, 400, 2.1072044372558594), (85, 425, 3.0393002033233643), (90, 450, 2.6911511421203613), (95, 475, 3.092047691345215), (100, 500, 4.043520927429199), (105, 525, 3.3742311000823975), (110, 550, 3.4100148677825928), (115, 575, 3.814147472381592), (120, 600, 4.582638502120972), (125, 625, 3.721238613128662), (130, 650, 3.9061295986175537), (135, 675, 4.967369079589844), (140, 700, 4.108262062072754), (145, 725, 4.58340859413147), (150, 750, 4.665069580078125), (155, 775, 4.926051139831543), (160, 800, 4.790550708770752), (165, 825, 5.353084087371826), (170, 850, 5.102706432342529), (175, 875, 5.361829996109009), (180, 900, 6.658843040466309), (185, 925, 7.348616600036621), (190, 950, 6.402133941650391), (195, 975, 5.9973790645599365)]

b = [(200, 1000, 6.255195379257202), (205, 1025, 6.394276857376099), (210, 1050, 6.059603691101074), (215, 1075, 6.792492389678955), (220, 1100, 8.24333381652832), (225, 1125, 7.051279306411743), (230, 1150, 7.645378351211548), (235, 1175, 8.354902505874634), (240, 1200, 8.070148944854736), (245, 1225, 8.176867485046387), (250, 1250, 8.499189376831055), (255, 1275, 9.846463441848755), (260, 1300, 10.064049482345581), (265, 1325, 8.560633182525635), (270, 1350, 10.75232219696045), (275, 1375, 9.50304126739502), (280, 1400, 11.259484052658081), (285, 1425, 10.280417919158936), (290, 1450, 10.984011173248291), (295, 1475, 8.990753412246704), (300, 1500, 9.486719846725464), (305, 1525, 10.850517272949219), (310, 1550, 12.358931303024292), (315, 1575, 10.648959875106812), (320, 1600, 11.124252796173096), (325, 1625, 10.750030279159546), (330, 1650, 16.37985920906067), (335, 1675, 15.015806913375854), (340, 1700, 12.035150289535522), (350, 1750, 16.621012926101685), (355, 1775, 14.23834753036499), (360, 1800, 13.874876976013184), (365, 1825, 13.387675046920776), (370, 1850, 14.209366083145142), (375, 1875, 17.317694425582886), (380, 1900, 14.547674417495728), (385, 1925, 14.671241521835327), (390, 1950, 16.380215883255005), (395, 1975, 14.23213815689087)]

c = [(400, 2000, 14.924623250961304), (405, 2025, 14.959342002868652), (410, 2050, 14.533796310424805), (415, 2075, 16.89414072036743), (420, 2100, 15.877077341079712), (425, 2125, 16.49530553817749), (430, 2150, 16.2052321434021), (435, 2175, 18.948643445968628), (440, 2200, 17.519040822982788), (445, 2225, 16.08632183074951), (450, 2250, 18.099005937576294), (455, 2275, 20.268192768096924), (460, 2300, 18.36616063117981), (465, 2325, 20.10931372642517), (470, 2350, 19.524025201797485), (475, 2375, 19.569310665130615), (480, 2400, 19.314786911010742), (485, 2425, 19.172598600387573), (490, 2450, 19.48819851875305), (495, 2475, 20.06494641304016), (500, 2500, 23.172639846801758)]

data = a + b + c

# Extracting node counts and execution times
node_counts = [x[0] for x in data]
execution_times = [x[2] for x in data]

# Plotting
plt.plot(node_counts, execution_times, marker='o', linestyle='-')

# Adding labels and title
plt.xlabel('Node Counts')
plt.ylabel('Execution Time (s)')
plt.title('Execution Time vs Node Counts')

# Displaying the plot
plt.grid(True)
plt.savefig("execution-time-vs-node-count.jpg", format="jpg")


########
data = [(100, 500, 2.922712802886963), (100, 505, 2.8382463455200195), (100, 510, 3.108489751815796), (100, 515, 3.7329349517822266), (100, 520, 3.8367695808410645), (100, 525, 3.5105321407318115), (100, 530, 3.5049121379852295), (100, 535, 3.6165316104888916), (100, 540, 3.854120969772339), (100, 545, 3.4143736362457275), (100, 550, 3.8040335178375244), (100, 555, 3.719653606414795), (100, 560, 3.9001753330230713), (100, 565, 4.264096260070801), (100, 570, 4.244858026504517), (100, 575, 3.764133930206299), (100, 580, 3.9405863285064697), (100, 585, 3.6493148803710938), (100, 590, 3.584064245223999), (100, 595, 4.1312220096588135), (100, 600, 4.0802764892578125), (100, 605, 4.357545375823975), (100, 610, 4.214223623275757), (100, 615, 4.673944711685181), (100, 620, 4.677007436752319), (100, 625, 5.087010860443115), (100, 630, 4.37409234046936), (100, 635, 4.421669244766235), (100, 640, 4.956798553466797), (100, 645, 5.643353462219238), (100, 650, 4.9526612758636475), (100, 655, 5.3722405433654785), (100, 660, 4.808771133422852), (100, 665, 4.51272177696228), (100, 670, 5.341168165206909), (100, 675, 6.214078187942505), (100, 680, 4.722242832183838), (100, 685, 5.015483140945435), (100, 690, 6.183599233627319), (100, 695, 5.615418195724487), (100, 700, 5.343178749084473), (100, 705, 5.205641984939575), (100, 710, 5.996565580368042), (100, 715, 6.097144842147827), (100, 720, 6.631076335906982), (100, 725, 5.952537775039673), (100, 730, 5.8445799350738525), (100, 735, 5.732685804367065), (100, 740, 5.94156289100647), (100, 745, 6.9926581382751465), (100, 750, 5.884997367858887), (100, 755, 7.077406406402588), (100, 760, 6.95320725440979), (100, 765, 6.644359111785889), (100, 770, 7.158259391784668), (100, 775, 6.611025333404541), (100, 780, 8.400253057479858), (100, 785, 11.488565444946289), (100, 790, 7.506215572357178), (100, 795, 8.21241283416748), (100, 800, 6.934906005859375), (100, 805, 7.273630142211914), (100, 810, 6.905050992965698), (100, 815, 8.659421920776367), (100, 820, 7.028865814208984), (100, 825, 7.319329500198364), (100, 830, 7.393512487411499), (100, 835, 8.61994194984436), (100, 840, 7.6169843673706055), (100, 845, 7.7465057373046875), (100, 850, 7.333344459533691), (100, 855, 8.638853073120117), (100, 860, 8.613118886947632), (100, 865, 8.756853580474854), (100, 870, 9.414214134216309), (100, 875, 7.770826816558838), (100, 880, 8.319752931594849), (100, 885, 8.635554552078247), (100, 890, 8.068615913391113), (100, 895, 16.01375150680542), (100, 900, 9.239661693572998), (100, 905, 9.126247882843018), (100, 910, 9.223705530166626), (100, 915, 9.209574222564697), (100, 920, 9.355283737182617), (100, 925, 9.028208017349243), (100, 930, 8.590073347091675), (100, 935, 8.478782892227173), (100, 940, 9.645065784454346), (100, 945, 8.993805408477783), (100, 950, 9.693256616592407), (100, 955, 8.643265962600708), (100, 960, 8.873014688491821), (100, 965, 10.24310302734375), (100, 970, 9.550349712371826), (100, 975, 9.65315294265747), (100, 980, 9.364914655685425), (100, 985, 10.677261114120483), (100, 990, 10.44063687324524), (100, 995, 10.55087924003601)]


# Extracting edge counts and execution times
node_counts = [x[1] for x in data]
execution_times = [x[2] for x in data]

# Plotting
plt.clf()
plt.plot(node_counts, execution_times, marker='o', linestyle='-')

# Adding labels and title
plt.xlabel('Edge Counts')
plt.ylabel('Execution Time (s)')
plt.title('Execution Time vs Edge Counts')

# Displaying the plot
plt.grid(True)
plt.savefig("execution-time-vs-edge-count.jpg", format="jpg")


###
data = [(100, 2525, 55.82403898239136), (105, 2525, 65.54975914955139), (110, 2525, 56.166576862335205), (115, 2525, 54.018580198287964), (120, 2525, 48.92192816734314), (125, 2525, 51.49295997619629), (130, 2525, 50.52983593940735), (135, 2525, 51.50693607330322), (140, 2525, 52.67191791534424), (145, 2525, 44.71457886695862), (150, 2525, 45.34102654457092), (155, 2525, 44.93420672416687), (160, 2525, 47.81121253967285), (165, 2525, 40.90940070152283), (170, 2525, 43.07965636253357), (175, 2525, 42.410083293914795), (180, 2525, 44.80605506896973), (185, 2525, 36.45151972770691), (190, 2525, 37.03072237968445), (195, 2525, 37.43830680847168), (200, 2525, 32.90210843086243), (205, 2525, 33.696768283843994), (210, 2525, 39.375771045684814), (215, 2525, 33.899770736694336), (220, 2525, 38.63511347770691), (225, 2525, 36.43374061584473), (230, 2525, 42.72408390045166), (235, 2525, 33.44333076477051), (240, 2525, 36.65442371368408), (245, 2525, 29.565829038619995), (250, 2525, 30.447258949279785), (255, 2525, 37.75561547279358), (260, 2525, 30.083281755447388), (265, 2525, 30.971479892730713), (270, 2525, 29.30511736869812), (275, 2525, 32.708967208862305), (280, 2525, 31.446659564971924), (285, 2525, 29.081517696380615), (290, 2525, 31.502920150756836), (295, 2525, 32.85942053794861), (300, 2525, 29.738224029541016), (305, 2525, 24.54120397567749), (310, 2525, 24.046363592147827), (315, 2525, 25.96646785736084), (320, 2525, 27.470801830291748), (325, 2525, 26.742568016052246), (330, 2525, 24.36410880088806), (335, 2525, 26.573400735855103), (340, 2525, 23.466692686080933), (345, 2525, 23.72389578819275), (350, 2525, 25.69214701652527), (355, 2525, 24.915199518203735), (360, 2525, 25.757108449935913), (365, 2525, 29.006412506103516), (370, 2525, 24.47145915031433), (375, 2525, 26.370042085647583), (380, 2525, 25.096396923065186), (385, 2525, 26.93733811378479), (390, 2525, 24.09575319290161), (395, 2525, 26.165955305099487), (400, 2525, 23.189804553985596), (405, 2525, 26.85443949699402), (410, 2525, 23.91797161102295), (415, 2525, 24.648807048797607), (420, 2525, 24.60446262359619), (425, 2525, 21.773103713989258), (430, 2525, 24.128722667694092), (435, 2525, 21.280665636062622), (440, 2525, 24.118708848953247), (445, 2525, 19.924659490585327), (450, 2525, 21.404796361923218), (455, 2525, 20.85092306137085), (460, 2525, 20.813276290893555), (465, 2525, 24.4256272315979), (470, 2525, 20.217949390411377), (475, 2525, 42.77472758293152), (480, 2525, 21.07584810256958), (485, 2525, 23.799161911010742), (490, 2525, 20.83854055404663), (495, 2525, 22.374587297439575), (500, 2525, 22.213723182678223)]

# Extracting edge counts and execution times
node_counts = [x[0] for x in data]
execution_times = [x[2] for x in data]

# Plotting
plt.clf()
plt.plot(node_counts, execution_times, marker='o', linestyle='-')

# Adding labels and title
plt.xlabel('Node Counts')
plt.ylabel('Execution Time (s)')
plt.title('Execution Time vs Node Counts')

# Displaying the plot
plt.grid(True)
plt.savefig("execution-time-vs-node-count.jpg", format="jpg")

